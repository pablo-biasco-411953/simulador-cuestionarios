[
  {
    "id": 1,
    "pregunta": "En el contexto del control de versiones, ¿a qué se denomina Repositorio?",
    "opciones": [
      "Disco duro que contiene el proyecto",
      "Archivo de respaldo que permite recuperar los cambios de un proyecto",
      "Cambio confirmado que se realizó a un archivo por un autor",
      "Conjunto de plantillas y buenas prácticas que puede utilizar el desarrollador",
      "Lugar donde se almacenan cambios de un proyecto"
    ],
    "correcta": "Lugar donde se almacenan cambios de un proyecto"
  },
  {
    "id": 2,
    "pregunta": "¿Cómo se llama un método estático MostrarMensaje en una clase estática Utilidades?",
    "opciones": [
      "new Utilidades().MostrarMensaje()",
      "Utilidades.MostrarMensaje()",
      "Utilidades->MostrarMensaje()",
      "Utilidades::MostrarMensaje()"
    ],
    "correcta": "Utilidades.MostrarMensaje()"
  },
  {
    "id": 3,
    "pregunta": "¿Qué es una interfaz en POO?",
    "opciones": [
      "Un método que no puede ser sobrescrito",
      "Un contrato que define un conjunto de métodos que una clase debe implementar",
      "Una clase que no puede ser instanciada",
      "Una clase que solo tiene métodos privados"
    ],
    "correcta": "Un contrato que define un conjunto de métodos que una clase debe implementar"
  },
  {
    "id": 4,
    "pregunta": "En el contexto de los archivos en Git, ¿cuándo un archivo está en estado Commited?",
    "opciones": [
      "Un archivo que fue subido y publicado por el autor",
      "Un archivo que fue clonado y aún no tiene modificaciones",
      "Un archivo modificado en su contenido, pero sin confirmarse ni incluirse en el próximo Commit",
      "Un archivo modificado en su contenido y confirmado",
      "Un archivo modificado en su contenido, para incluirse en el próximo Commit"
    ],
    "correcta": "Un archivo modificado en su contenido y confirmado"
  },
  {
    "id": 5,
    "pregunta": "En el contexto del control de versiones, ¿a qué se denomina Copia de Trabajo?",
    "opciones": [
      "Copia que se realiza del proyecto en un servidor externo para respaldo",
      "Copia en el servidor utilizada para testear el proyecto",
      "Copia local del proyecto donde el desarrollador realiza cambios",
      "Copia local de las líneas de código cambiadas por el desarrollador",
      "Copia local del historial de cambios del proyecto"
    ],
    "correcta": "Copia que se realiza del proyecto en un servidor externo para respaldo"
  },
  {
    "id": 6,
    "pregunta": "¿Qué permite la implementación de interfaces en una clase?",
    "opciones": [
      "Definir un contrato que la clase debe cumplir",
      "Crear instancias de una clase abstracta",
      "Ocultar métodos de una clase base",
      "Heredar automáticamente de otra clase"
    ],
    "correcta": "Definir un contrato que la clase debe cumplir"
  },
  {
    "id": 7,
    "pregunta": "¿Qué permite el encapsulamiento en la Programación Orientada a Objetos?",
    "opciones": [
      "Heredar características de otro objeto",
      "Crear instancias de una clase",
      "Utilizar múltiples formas de un objeto",
      "Ocultar los detalles internos de un objeto"
    ],
    "correcta": "Ocultar los detalles internos de un objeto"
  },
  {
    "id": 8,
    "pregunta": "¿Qué se logra con el uso de propiedades en C#?",
    "opciones": [
      "Controlar el acceso a los campos de una clase",
      "Definir constructores adicionales",
      "Heredar métodos de otra clase",
      "Crear instancias de una clase"
    ],
    "correcta": "Controlar el acceso a los campos de una clase"
  },
  {
    "id": 9,
    "pregunta": "¿Qué se entiende por 'sobrecarga de métodos'?",
    "opciones": [
      "Ocultar los métodos de una clase",
      "Definir múltiples clases con el mismo nombre",
      "Definir múltiples métodos con el mismo nombre pero diferentes parámetros",
      "Heredar métodos de una clase base"
    ],
    "correcta": "Definir múltiples métodos con el mismo nombre pero diferentes parámetros"
  },
  {
    "id": 10,
    "pregunta": "¿Qué característica define a una clase estática en C#?",
    "opciones": [
      "No puede contener métodos",
      "No puede contener atributos",
      "No puede ser utilizada en aplicaciones de consola",
      "No puede ser instanciada"
    ],
    "correcta": "No puede ser instanciada"
  },
  {
    "id": 11,
    "pregunta": "¿Cuál es la diferencia principal entre una clase abstracta y una interfaz?",
    "opciones": [
      "Una interfaz no puede tener métodos, una clase abstracta sí",
      "Una clase abstracta puede contener implementación, una interfaz no",
      "Una clase abstracta no puede ser heredada, una interfaz sí",
      "Una interfaz puede contener implementación, una clase abstracta no"
    ],
    "correcta": "Una clase abstracta puede contener implementación, una interfaz no"
  },
  {
    "id": 12,
    "pregunta": "¿Cómo se accede a un elemento de una enumeración llamada Nivel con valor Medio?",
    "opciones": [
      "Nivel[Medio]",
      "Nivel.Medio",
      "Nivel->Medio",
      "Nivel.1"
    ],
    "correcta": "Nivel.Medio"
  },
  {
    "id": 13,
    "pregunta": "Indique cuál/es afirmaciones NO son válidas respecto a la arquitectura Cliente-Servidor",
    "opciones": [
      "Tiene dos partes, por un lado, el servidor y por otro uno o más clientes",
      "Un ejemplo de este modelo es usar un protocolo FTP.",
      "Su propósito es mantener una comunicación de información entre diferentes entidades de una red",
      "El ejemplo más popular más mencionado es la red de Internet.",
      "Permite conectar un único cliente a un servidor"
    ],
    "correcta": "Permite conectar un único cliente a un servidor"
  },
  {
    "id": 14,
    "pregunta": "¿A qué característica de HTTP hace referencia la siguiente afirmación? El protocolo HTTP permite desarrollar nuevas funcionalidades haciendo uso de las cabeceras y su semántica estandarizada.",
    "opciones": [
      "Existencia de Sesiones.",
      "Sencillez.",
      "Extensibilidad.",
      "Conexiones HTTP.",
      "Inexistencia de Estados."
    ],
    "correcta": "Extensibilidad"
  },
  {
    "id": 15,
    "pregunta": "Indique cuál/es afirmaciones NO corresponden a desventajas de una arquitectura Cliente-Servidor",
    "opciones": [
      "Facilita la escalabilidad de los sistemas",
      "Es un modelo flexible y adaptable",
      "Se requiere habilidad para que un servidor sea reparado",
      "Alto costo económico tanto para hardware como software.",
      "Problemas de seguridad"
    ],
    "correcta": [
      "Facilita la escalabilidad de los sistemas",
      "Es un modelo flexible y adaptable"
    ]
  },
  {
    "id": 16,
    "pregunta": "Indique qué pasos son siempre necesarios para enviar un mensaje HTTP desde un cliente a un servidor.",
    "opciones": [
      "Se envía un tipo de mensaje indicando host, path y versión del protocolo entre otros",
      "Se solicita memoria cache de un proxy.",
      "Se envía un código de respuesta",
      "Se establece una conexión",
      "Se solicita autorización al servidor"
    ],
    "correcta": [
      "Se envía un tipo de mensaje indicando host, path y versión del protocolo entre otros",
      "Se establece una conexión"
    ]
  },
  {
    "id": 17,
    "pregunta": "El método GET permite:",
    "opciones": [
      "Se utiliza para enviar una entidad al recurso especificado, lo que a menudo provoca un cambio de estado",
      "Elimina un recurso especificado",
      "Modificar un recurso existente.",
      "Solo recuperar datos",
      "Realiza una prueba de bucle de mensajes"
    ],
    "correcta": "Solo recuperar datos"
  },
  {
    "id": 18,
    "pregunta": "Todo Request (pedido HTTP) está formado por:",
    "opciones": [
      "Cabeceras",
      "Todas son correctas",
      "Método",
      "Dirección del recurso",
      "Cuerpo"
    ],
    "correcta": "Todas son correctas"
  },
  {
    "id": 19,
    "pregunta": "En una arquitectura Cliente-Servidor, ¿qué es un protocolo?",
    "opciones": [
      "Un conjunto de información, en un formato específico.",
      "Una pieza de código que responde a las necesidades de un cliente.",
      "Una definición de formato y características del flujo de información en una red.",
      "Un conjunto de clientes y servidores, unidos a través de servicios y bases de datos.",
      "Un conjunto de normas y procedimientos para posibilitar la comunicación."
    ],
    "correcta": "Un conjunto de normas y procedimientos para posibilitar la comunicación."
  },
  {
    "id": 20,
    "pregunta": "Señale cuál es una característica principal del protocolo HTTP",
    "opciones": [
      "Gestiona conexiones a nivel de aplicación",
      "No es extensible.",
      "Es sin estado",
      "No permite manejar sesiones entre clientes y servidor",
      "Ninguna es correcta."
    ],
    "correcta": "Es sin estado"
  },
  {
    "id": 21,
    "pregunta": "Un código 404 representa:",
    "opciones": [
      "Que el recurso ahora se encuentra permanentemente en otra URI",
      "Ninguna es correcta.",
      "Recurso no encontrado",
      "Un error en el servidor",
      "La solicitud ha tenido éxito."
    ],
    "correcta": "Recurso no encontrado"
  },
  {
    "id": 22,
    "pregunta": "Indique las opciones correctas respecto del método POST.",
    "opciones": [
      "Generalmente viene acompañado de un cambio de estado.",
      "Envía una entidad a un recurso especificado.",
      "Publica un mensaje informativo o de log en el servidor",
      "Funciona de igual manera que PATCH.",
      "Reemplaza todas las representaciones actuales del recurso de destino con la carga útil de la solicitud."
    ],
    "correcta": [
      "Generalmente viene acompañado de un cambio de estado.",
      "Envía una entidad a un recurso especificado."
    ]
  },
  {
    "id": 23,
    "pregunta": "¿Qué es un recurso en el contexto de una API REST?",
    "opciones": [
      "Un servidor que almacena datos",
      "Un archivo XML",
      "Una base de datos",
      "Un concepto importante del negocio como facturas, cursos, compras, etc."
    ],
    "correcta": "Un concepto importante del negocio como facturas, cursos, compras, etc."
  },
  {
    "id": 24,
    "pregunta": "¿Cuál de los siguientes es un principio arquitectónico comúnmente seguido por las API web?",
    "opciones": [
      "XML",
      "FTP",
      "TCP",
      "REST"
    ],
    "correcta": "REST"
  },
  {
    "id": 25,
    "pregunta": "¿Cuál de las siguientes NO es una característica deseable de un Servicio Web?",
    "opciones": [
      "Dependencia del lenguaje de programación específico",
      "Descripción de sí mismo",
      "Accesibilidad a través de la Web",
      "Localización automática"
    ],
    "correcta": "Dependencia del lenguaje de programación específico"
  },
  {
    "id": 26,
    "pregunta": "¿Qué es un servicio web RESTful?",
    "opciones": [
      "Un servicio que utiliza SOAP exclusivamente",
      "Un servicio web basado en FTP",
      "Un servicio web que no utiliza HTTP",
      "Un servicio que sigue los principios arquitectónicos REST"
    ],
    "correcta": "Un servicio que sigue los principios arquitectónicos REST"
  },
  {
    "id": 27,
    "pregunta": "¿Cómo se identifica de manera única un recurso en una API REST?",
    "opciones": [
      "Mediante un nombre de usuario",
      "Mediante una URL",
      "Mediante un URI",
      "Mediante una dirección IP"
    ],
    "correcta": "Mediante un URI"
  },
  {
    "id": 28,
    "pregunta": "¿Qué indica un código de estado en una respuesta HTTP?",
    "opciones": [
      "El éxito o fallo de la solicitud",
      "La URL del recurso solicitado",
      "La versión del protocolo HTTP",
      "El tiempo de respuesta del servidor"
    ],
    "correcta": "El éxito o fallo de la solicitud"
  },
  {
    "id": 29,
    "pregunta": "¿Qué es un Servicio Web?",
    "opciones": [
      "Un programa local para gestión de archivos",
      "Una colección de métodos accesibles desde cualquier lugar de Internet",
      "Un formato de archivo para documentos",
      "Un tipo de hardware para servidores"
    ],
    "correcta": "Una colección de métodos accesibles desde cualquier lugar de Internet"
  },
  {
    "id": 30,
    "pregunta": "¿Qué representa una URL en el contexto de una API REST?",
    "opciones": [
      "El nombre de un servidor",
      "Una configuración de red",
      "La dirección completa de un recurso",
      "Un archivo en el servidor"
    ],
    "correcta": "La dirección completa de un recurso"
  },
  {
    "id": 31,
    "pregunta": "¿Qué se entiende por endpoint en una API REST?",
    "opciones": [
      "La configuración del cliente",
      "La ubicación completa del recurso",
      "La base de datos de la API",
      "El tipo de servidor utilizado"
    ],
    "correcta": "La ubicación completa del recurso"
  },
  {
    "id": 32,
    "pregunta": "¿Qué significa URI en el contexto de las API REST?",
    "opciones": [
      "Localizador de Recurso Uniforme",
      "Lenguaje de Marcado Extensible",
      "Identificador de Recurso Uniforme",
      "Protocolo de Transferencia de Hipertexto"
    ],
    "correcta": "Identificador de Recurso Uniforme"
  },
  {
    "id": 39,
    "pregunta": "¿Cuál es el propósito de una migración en EF Core?",
    "opciones": [
      "Eliminar entidades innecesarias del proyecto.",
      "Cambiar el proveedor de base de datos.",
      "Sincronizar el modelo de datos con la estructura de la base de datos.",
      "Migrar datos entre dos bases de datos."
    ],
    "correcta": "Sincronizar el modelo de datos con la estructura de la base de datos."
  },
  {
    "id": 40,
    "pregunta": "¿Qué es una Task en C#?",
    "opciones": [
      "Es un método para eliminar hilos en C#.",
      "Es una clase que representa una unidad de trabajo asíncrona que se ejecuta en segundo plano.",
      "Es una propiedad que convierte una operación en síncrona.",
      "Es una clase que representa una unidad de trabajo síncrona que se ejecuta en el hilo principal."
    ],
    "correcta": "Es una clase que representa una unidad de trabajo asíncrona que se ejecuta en segundo plano."
  },
  {
    "id": 41,
    "pregunta": "¿Qué palabra clave se usa para hacer un método asíncrono en C#?",
    "opciones": [
      "async",
      "await",
      "sync",
      "task"
    ],
    "correcta": "async"
  },
  {
    "id": 42,
    "pregunta": "¿Qué significa Eager Loading en EF Core?",
    "opciones": [
      "Cargar datos de manera diferida.",
      "Cargar los datos sólo cuando se soliciten.",
      "Cargar todos los datos de la entidad y sus relaciones de inmediato.",
      "Cargar sólo los datos principales y no las relaciones."
    ],
    "correcta": "Cargar todos los datos de la entidad y sus relaciones de inmediato."
  },
  {
    "id": 43,
    "pregunta": "¿Cuál es el resultado de ejecutar la instrucción await _context.Productos.ToListAsync()?",
    "opciones": [
      "Inserta una lista de productos de forma asíncrona.",
      "Retorna una lista de productos de forma asíncrona.",
      "Retorna una lista de productos de forma síncrona.",
      "Elimina una lista de productos de forma síncrona."
    ],
    "correcta": "Retorna una lista de productos de forma asíncrona."
  },
  {
    "id": 44,
    "pregunta": "¿Qué es Eager Loading en EF Core?",
    "opciones": [
      "Es el proceso de cargar datos relacionados junto con la entidad principal en una sola consulta.",
      "Es un método para diferir la carga de datos relacionados hasta que se necesiten.",
      "Es una técnica que evita cargar cualquier dato relacionado.",
      "Es una técnica que carga datos sólo cuando ocurre una excepción."
    ],
    "correcta": "Es el proceso de cargar datos relacionados junto con la entidad principal en una sola consulta."
  },
  {
    "id": 45,
    "pregunta": "¿Qué propiedad del archivo appsettings.json se utiliza para configurar la conexión a la base de datos en un proyecto EF Core?",
    "opciones": [
      "SQLConnectionStrings",
      "ConnectionStrings",
      "DbConnection",
      "EFCoreConnection"
    ],
    "correcta": "ConnectionStrings"
  },
  {
    "id": 46,
    "pregunta": "¿Qué tipo de carga de datos es menos propensa a causar problemas de rendimiento relacionados con el problema de N + 1?",
    "opciones": [
      "Ambos tipos de carga de datos conllevan a problemas de rendimiento relacionados con el problema de N + 1.",
      "Lazy Loading",
      "Ningún tipo de carga de datos conllevan a problemas de rendimiento relacionados con el problema de N + 1.",
      "Eager Loading"
    ],
    "correcta": "Eager Loading"
  },
  {
    "id": 47,
    "pregunta": "¿Qué método se utiliza para insertar un nuevo registro en una base de datos con EF Core?",
    "opciones": [
      "Append()",
      "Insert()",
      "Add()",
      "New()"
    ],
    "correcta": "Add()"
  },
  {
    "id": 49,
    "pregunta": "¿Qué hace el método ToTable(T_Productos) en la configuración del modelo?",
    "opciones": [
      "Cambia el nombre de la tabla de Productos a T_Productos",
      "Elimina la tabla Productos",
      "Crea una nueva tabla llamada T_Productos",
      "Recupera los registros de la tabla T_Productos"
    ],
    "correcta": "Cambia el nombre de la tabla de Productos a T_Productos"
  },
  {
    "id": 50,
    "pregunta": "¿Qué lenguaje se utiliza para consultas en Entity Framework Core?",
    "opciones": [
      "C#",
      "LINQ",
      "Java",
      "SQL"
    ],
    "correcta": "LINQ"
  },
  {
    "id": 51,
    "pregunta": "¿¿Qué efecto tendría el comando dotnet ef migrations add <nombre_migracion>?",
    "opciones": [
      "Crea una nueva migración con los cambios en el modelo",
      "ApplicaAplica las migraciones pendientes a la base de datos",
      "Revierte la última migración",
      "DbContextOptions",
      "Elimina la migración especificada"
    ],
    "correcta": "Crea una nueva migración con los cambios en el modelo"
  },
  {
    "id": 52,
    "pregunta": "¿Qué es un ORM?",
    "opciones": [
      "Un lenguaje de consulta para bases de datos SQL",
      "Un compilador de código que permite transformar código C# en código SQL",
      "Una herramienta que convierte objetos de una aplicación a un formato adecuado para ser almacenados en una base de datos",
      "Un sistema de gestión de bases de datos que posee más funcionalidades que SQL Server Management Studio"
    ],
    "correcta": "Una herramienta que convierte objetos de una aplicación a un formato adecuado para ser almacenados en una base de datos"
  },
  {
    "id": 53,
    "pregunta": "¿Qué es EF Core?",
    "opciones": [
      "Un sistema operativo",
      "Un lenguaje de programación",
      "Un ORM para bases de datos NoSQL",
      "Un mapeador de bases de datos. (Generalmente se le conoce como ORM - Object-Relational Mapper, que esencialmente es un 'mapeador de bases de datos')"
    ],
    "correcta": "Un mapeador de bases de datos. (Generalmente se le conoce como ORM - Object-Relational Mapper, que esencialmente es un 'mapeador de bases de datos')"
  },
  {
    "id": 54,
    "pregunta": "¿Qué método de LINQ se utiliza para filtrar registros a través de múltiples condiciones?",
    "opciones": [
      "FirstOrDefault()",
      "Filter()",
      "Where()",
      "ToList()"
    ],
    "correcta": "Where()"
  },
  {
    "id": 55,
    "pregunta": "¿¿Qué palabra clave en C# se utiliza para esperar el resultado de una operación asíncrona?",
    "opciones": [
      "join",
      "wait",
      "async",
      "await "
    ],
    "correcta": "await"
  },
  {
    "id": 56,
    "pregunta": "¿Qué propiedad del archivo appsettings.json se utiliza para configurar la conexión a la base de datos en un proyecto EF Core?",
    "opciones": [
      "EFCoreConnection",
      "ConnectionStrings",
      "DbConnection",
      "SQLConnectionStrings"
    ],
    "correcta": "ConnectionStrings"
  },
  {
    "id": 57,
    "pregunta": "¿Qué es Eager Loading en EF Core?",
    "opciones": [
      "Es una técnica que carga datos solo cuando ocurre una excepción",
      "Es una técnica que evita cargar cualquier dato relacionado",
      "Es un método para diferir la carga de datos relacionados hasta que se necesiten",
      "Es el proceso de cargar datos relacionados junto con la entidad principal en una sola consulta"
    ],
    "correcta": "Es el proceso de cargar datos relacionados junto con la entidad principal en una sola consulta"
  },
  {
    "id": 58,
    "pregunta": "¿Qué hace el patrón Repository en EF Core?",
    "opciones": [
      "Facilita la separación de responsabilidades",
      "Mejora el rendimiento de consultas SQL",
      "Permite conexiones persistentes a la base de datos",
      "Almacena los datos en caché"
    ],
    "correcta": "Facilita la separación de responsabilidades"
  },
   {
    "id": 59,
    "pregunta": "¿Qué permite la implementación de interfaces en una clase?",
    "opciones": [
      "Crear instancias de una clase abstracta",
      "Ocultar métodos de una clase base",
      "Heredar automáticamente de otra clase",
      "Definir un contrato que la clase debe cumplir"
    ],
    "correcta": "Definir un contrato que la clase debe cumplir"
  },
  {
    "id": 60,
    "pregunta": "¿Cuál es la palabra clave utilizada para definir una enumeración en C#?",
    "opciones": [
      "class",
      "enum",
      "number",
      "enumeration"
    ],
    "correcta": "enum"
  },
  {
    "id": 61,
    "pregunta": "¿Qué es una interfaz en POO?",
    "opciones": [
      "Una clase que no puede ser instanciada",
      "Un método que no puede ser sobrescrito",
      "Una clase que solo tiene métodos privados",
      "Un contrato que define un conjunto de métodos que una clase debe implementar"
    ],
    "correcta": "Un contrato que define un conjunto de métodos que una clase debe implementar"
  },
  {
    "id": 62,
    "pregunta": "¿Cuál es el objetivo principal del modelo de programación en capas?",
    "opciones": [
      "Separar responsabilidades entre las clases",
      "Mejorar el rendimiento del sistema",
      "Reducir el uso de memoria",
      "Facilitar la compilación del código"
    ],
    "correcta": "Separar responsabilidades entre las clases"
  },
  {
    "id": 63,
    "pregunta": "¿Cuál de los siguientes NO es un beneficio del patrón Singleton?",
    "opciones": [
      "Simplificación de la estructura de clases",
      "Proporciona una única instancia global",
      "Reducción del consumo de memoria",
      "Control sobre la instanciación de clases"
    ],
    "correcta": "Reducción del consumo de memoria"
  },
  {
    "id": 64,
    "pregunta": "¿Para qué se utiliza el método HTTP OPTIONS?",
    "opciones": [
      "Reemplazar todas las representaciones actuales del recurso de destino con la carga útil de la solicitud",
      "Solicitar una respuesta idéntica a la de una solicitud GET pero sin el cuerpo de la respuesta",
      "Solicitar una representación del recurso especificado",
      "Describir las opciones de comunicación para el recurso de destino"
    ],
    "correcta": "Describir las opciones de comunicación para el recurso de destino"
  },
  {
    "id": 65,
    "pregunta": "¿Cuál es la función principal del método HTTP CONNECT?",
    "opciones": [
      "Enviar una entidad al recurso especificado",
      "Aplicar modificaciones parciales a un recurso",
      "Convertir la solicitud en un túnel TCP/IP",
      "Solicitar una representación del recurso especificado"
    ],
    "correcta": "Convertir la solicitud en un túnel TCP/IP"
  },
  {
    "id": 66,
    "pregunta": "¿Qué significa HTTP?",
    "opciones": [
      "Hyperlink Text Protocol",
      "Hypertext Transfer Protocol",
      "Hyperlink Transfer Protocol",
      "High Text Transfer Protocol"
    ],
    "correcta": "Hypertext Transfer Protocol"
  },
  {
    "id": 67,
    "pregunta": "¿Qué hace el atributo DbSet<Producto> en el contexto de una base de datos?",
    "opciones": [
      "Representa las entidades de la tabla Productos",
      "Representa una vista de la tabla Productos",
      "Realiza una operación de inserción sobre la tabla Productos",
      "Genera un procedimiento almacenado sobre la tabla Productos"
    ],
    "correcta": "Representa las entidades de la tabla Productos"
  },
  {
    "id": 68,
    "pregunta": "¿Qué lenguaje se utiliza para consultas en Entity Framework Core?",
    "opciones": [
      "Java",
      "LINQ",
      "SQL",
      "C#"
    ],
    "correcta": "LINQ"
  },
   {
    "id": 69,
    "pregunta": "¿Qué clase de EF Core representa una sesión con la base de datos y configura las relaciones entre entidades?",
    "opciones": [
    "ContextSession",
    "ApplicationDbContext",
    "DbContextOptions",
    "EntityContext"
    ],
    "correcta": "ApplicationDbContext"
  }
]
